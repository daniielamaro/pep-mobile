{"version":3,"sources":["./src/app/page/clinicas/clinicas-routing.module.ts","./src/app/page/clinicas/clinicas.module.ts","./src/app/page/clinicas/clinicas.page.ts","./src/app/page/clinicas/clinicas.service.ts","./src/app/page/clinicas/clinicas.page.scss","./src/app/page/clinicas/clinicas.page.html"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAER;AAE/C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,wDAAY;KACxB;CACF,CAAC;IAMW,yBAAyB,SAAzB,yBAAyB;CAAG;AAA5B,yBAAyB;IAJrC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,yBAAyB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;AChBG;AACM;AACF;AAEA;AAEyB;AAEvB;AACM;AACS;IAYjD,kBAAkB,SAAlB,kBAAkB;CAAG;AAArB,kBAAkB;IAV9B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,+EAAyB;SAC1B;QACD,YAAY,EAAE,CAAC,wDAAY,CAAC;QAC5B,SAAS,EAAE,CAAC,8DAAe,EAAE,wEAAU,CAAC;KACzC,CAAC;GACW,kBAAkB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;ACtB0C;AACc;IAQ1E,YAAY,SAAZ,YAAY;IAEvB,gBAAgB,CAAC;IAIjB,eAAe;QACb,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,QAAQ;IACR,CAAC;IAED,SAAS;QACP,MAAM,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,qBAAqB,EAAa,CAAC;QAEnF,wGAA0B,CAAC;YACzB,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC;YACrC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC;YACvC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC;YAC7B,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC;YAC7B,IAAI,EAAE,CAAC;SACR,CAAC,CAAC;QAEH,6GAA+B,CAAC,YAAY,EAAE,GAAS,EAAE,CAAC;YACxD,4GAA8B,CAAC;gBAC7B,IAAI,EAAE,QAAQ,CAAC,6BAA6B;aAC7C,CAAC,CAAC;YAEH,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC7B,CAAC,EAAC,CAAC;IACL,CAAC;IAEK,mBAAmB;;YACvB,OAAO;QACT,CAAC;KAAA;IAED,eAAe;QACb,uGAAyB,EAAE,CAAC;IAC9B,CAAC;CAEF;;;sBArCE,oDAAS,SAAC,KAAK;;AAJL,YAAY;IALxB,wDAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,6EAAmC;;KAEpC,CAAC;GACW,YAAY,CAyCxB;AAzCwB;;;;;;;;;;;;;;;;;;;ACTkB;IAK9B,eAAe,SAAf,eAAe;IAE1B,gBAAgB,CAAC;CAClB;;AAHY,eAAe;IAH3B,yDAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,eAAe,CAG3B;AAH2B;;;;;;;;;;;;;;;;ACL5B,iEAAe,OAAO,iBAAiB,GAAG,6CAA6C,mPAAmP,E;;;;;;;;;;;;;;;ACA1U,iEAAe,6MAA6M,E","file":"src_app_page_clinicas_clinicas_module_ts.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ClinicasPage } from './clinicas.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ClinicasPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ClinicasPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ClinicasPageRoutingModule } from './clinicas-routing.module';\n\nimport { ClinicasPage } from './clinicas.page';\nimport { ClinicasService } from './clinicas.service';\nimport { UrlService } from 'src/app/shared/class/url-service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ClinicasPageRoutingModule\n  ],\n  declarations: [ClinicasPage],\n  providers: [ClinicasService, UrlService]\n})\nexport class ClinicasPageModule {}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { CapacitorGoogleMaps } from '@capacitor-community/capacitor-googlemaps-native';\nimport { Geolocation } from '@capacitor/geolocation';\n\n@Component({\n  selector: 'app-clinicas',\n  templateUrl: './clinicas.page.html',\n  styleUrls: ['./clinicas.page.scss'],\n})\nexport class ClinicasPage implements OnInit {\n\n  constructor() { }\n\n  @ViewChild('map') mapView: ElementRef;\n\n  ionViewDidEnter() {\n    this.createMap();\n  }\n\n  ngOnInit() {\n  }\n\n  createMap() {\n    const boundingRect = this.mapView.nativeElement.getBoundingClientRect() as DOMRect;\n\n    CapacitorGoogleMaps.create({\n      width: Math.round(boundingRect.width),\n      height: Math.round(boundingRect.height),\n      x: Math.round(boundingRect.x),\n      y: Math.round(boundingRect.y),\n      zoom: 5\n    });\n\n    CapacitorGoogleMaps.addListener('onMapReady', async () => {\n      CapacitorGoogleMaps.setMapType({\n        type: \"normal\" // hybrid, satellite, terrain\n      });\n\n      this.showCurrentPosition();\n    });\n  }\n\n  async showCurrentPosition() {\n    // todo\n  }\n\n  ionViewDidLeave() {\n    CapacitorGoogleMaps.close();\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClinicasService {\n\n  constructor() { }\n}\n","export default \"#map {\\n  height: 50vh;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsaW5pY2FzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQUE7QUFDRiIsImZpbGUiOiJjbGluaWNhcy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjbWFwIHtcclxuICBoZWlnaHQ6IDUwdmg7XHJcbn1cclxuIl19 */\";","export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-title>\\n      Devdactic Maps\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div id=\\\"map\\\" #map></div>\\n</ion-content>\\n\";"],"sourceRoot":"webpack:///"}