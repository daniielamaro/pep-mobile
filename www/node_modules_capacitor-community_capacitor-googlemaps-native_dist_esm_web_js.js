(self["webpackChunkpeppaciente"] = self["webpackChunkpeppaciente"] || []).push([["node_modules_capacitor-community_capacitor-googlemaps-native_dist_esm_web_js"],{

/***/ 3580:
/*!***************************************************************************************!*\
  !*** ./node_modules/@capacitor-community/capacitor-googlemaps-native/dist/esm/web.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CapacitorGoogleMapsWeb": () => (/* binding */ CapacitorGoogleMapsWeb)
/* harmony export */ });
/* harmony import */ var _capacitor_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @capacitor/core */ 8384);

class CapacitorGoogleMapsWeb extends _capacitor_core__WEBPACK_IMPORTED_MODULE_0__.WebPlugin {
    constructor() {
        super({
            name: 'CapacitorGoogleMaps',
            platforms: ['web']
        });
    }
    create(_options) {
        throw new Error('Method not implemented.');
    }
    initialize(_options) {
        throw new Error('Method not implemented.');
    }
    addMarker(_options) {
        throw new Error('Method not implemented.');
    }
    setCamera(_options) {
        throw new Error('Method not implemented.');
    }
    setMapType(_options) {
        throw new Error('Method not implemented.');
    }
    setIndoorEnabled(_options) {
        throw new Error('Method not implemented.');
    }
    setTrafficEnabled(_options) {
        throw new Error('Method not implemented.');
    }
    accessibilityElementsHidden(_options) {
        throw new Error('Method not implemented.');
    }
    padding(_options) {
        throw new Error('Method not implemented.');
    }
    clear() {
        throw new Error('Method not implemented.');
    }
    close() {
        throw new Error('Method not implemented.');
    }
    hide() {
        throw new Error('Method not implemented.');
    }
    show() {
        throw new Error('Method not implemented.');
    }
    settings(_options) {
        throw new Error('Method not implemented.');
    }
    reverseGeocodeCoordinate(_options) {
        throw new Error('Method not implemented.');
    }
    enableCurrentLocation(_options) {
        throw new Error('Method not implemented.');
    }
    myLocation(_options) {
        throw new Error('Method not implemented.');
    }
    setMapStyle(_options) {
        throw new Error('Method not implemented.');
    }
    addPolyline(_options) {
        throw new Error('Method not implemented.');
    }
    addCircle(_options) {
        throw new Error('Method not implemented.');
    }
    addPolygon(_options) {
        throw new Error('Method not implemented.');
    }
    setOnMarkerClickListener() {
        throw new Error('Method not implemented.');
    }
    setOnMapClickListener() {
        throw new Error('Method not implemented.');
    }
    setOnPoiClickListener() {
        throw new Error('Method not implemented.');
    }
    requestLocationPermission() {
        throw new Error('Method not implemented.');
    }
    setOnMyLocationClickListener() {
        throw new Error('Method not implemented.');
    }
    setOnMyLocationButtonClickListener() {
        throw new Error('Method not implemented.');
    }
}
//# sourceMappingURL=web.js.map

/***/ })

}]);
//# sourceMappingURL=node_modules_capacitor-community_capacitor-googlemaps-native_dist_esm_web_js.js.map